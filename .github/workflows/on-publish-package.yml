name: on-publish-package
on:
  push:
    branches:
      - docs/comment/steps
  workflow_dispatch:
##################################################
#
# The intention of this actions file is to allow
# both npm packages to be published and docker
# images to be built in the build job.
# After the build job has successfully published
# then the integration testing using the published
# modules and images can take place in the one
# actions file.
# The docker image built in the build job is used
# in the integration job as a service.
#
##################################################
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      ##################################################
      #
      # code checkout and node setup, this uses 2 actions
      # from the market place
      #
      ##################################################
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
     ##################################################

      #   _           _ _     _
      #  | |__  _   _(_) | __| |
      #  | '_ \| | | | | |/ _` |
      #  | |_) | |_| | | | (_| |
      #  |_.__/ \__,_|_|_|\__,_|
      ##################################################

      ##################################################
      #
      # regular use of npm install command
      #
      ##################################################
      - name: npm install
        run: npm ci
      ##################################################
      #
      #  A mono repo using lerna has been choosen for
      #  this project as it will test expressJS session
      #  behavior against several Database/storeage
      #  systems.
      #
      ##################################################
      - name: lerna bootstrap
        run: ./node_modules/.bin/lerna bootstrap
      ##################################################
      #
      # lerna bootstrap simply installs all the packages
      # in the mono repo. workspaces are an alternative
      #
      ##################################################
      - name: linting
        run: ./node_modules/.bin/lerna run lint

      ##################################################
      #   ____             _
      #  |  _ \  ___   ___| | _____ _ __
      #  | | | |/ _ \ / __| |/ / _ \ '__|
      #  | |_| | (_) | (__|   <  __/ |
      #  |____/ \___/ \___|_|\_\___|_|
      #
      ##################################################

      ##################################################
      #
      #  Github actions offer both a Github docker
      #  registry and allow access to the public
      #  docker hub registry. The build scripts will use
      #  different URLS depending upon the registry.
      #  Additionally it was found through empirical
      #  experimentation and articles that running an
      #  image as a service was not possible with an
      #  image from the Github registry. The docker
      #  registry was required for services.
      #
      ##################################################
      - name: docker-action-build-image-to-docker-public-registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.ACTIONS_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.ACTIONS_DOCKER_HUB_TOKEN }}
          repository: ${{ secrets.ACTIONS_DOCKER_HUB_USERNAME }}/express-integration-redis-store
          registry: registry.hub.docker.com
          tags: latest
          dockerfile: packages/redis-store/Dockerfile
      - name: docker-action-build-publish-to-github-registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.ACTIONS_GITHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: express-integration-redis-store
          tags: latest
          dockerfile: packages/redis-store/Dockerfile
